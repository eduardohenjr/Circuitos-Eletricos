import matplotlib.pyplot as plt
import math
import cmath

def frequencia_angular(angular_frequency):
    return 2 * angular_frequency * math.pi

def draw_simple_circuit(voltage_label, componente_label_1, componente_label_2, voltage_output_label, current_label, circuit_title):
    plt.figure(figsize=(8, 4))

    # Desenha a fonte de tensão
    plt.text(-0.3, 0.7, f'V(t)= {voltage_label} V', fontsize=12, ha='center')
    plt.plot([0, 0], [0, 0.65], color='blue', linewidth=3)  # Parte vertical inferior da fonte
    plt.plot([0, 0], [0.85, 1.5], color='blue', linewidth=3)  # Parte vertical superior da fonte
    plt.plot([-0.1, 0.1], [0.85, 0.85], color='blue', linewidth=3)  # Parte superior da fonte
    plt.plot([-0.05, 0.05], [0.65, 0.65], color='blue', linewidth=3)  # Parte superior da fonte

    # Desenha Parte superior
    plt.text(0.7, 1.9, f'{componente_label_1:.2f} Ω', fontsize=12, ha='center')
    plt.plot([0.45, 0.45], [1.3, 1.7], color='black', linewidth=3)  # Parte vertical do capacitor
    plt.plot([0.45, 0.95], [1.7, 1.7], color='black', linewidth=3)  # Parte superior do capacitor
    plt.plot([0.95, 0.95], [1.3, 1.7], color='black', linewidth=3)  # Parte direita do capacitor
    plt.plot([0.45, 0.95], [1.3, 1.3], color='black', linewidth=3)  # Parte inferior do capacitor
    plt.plot([0, 0.45], [1.5, 1.5], color='black', linewidth=3)  # Linha superior esquerda
    plt.plot([0.95, 1.4], [1.5, 1.5], color='black', linewidth=3)  # Linha superior direita

    # Desenha Parte direita (resistor)
    plt.text(1.8, 0.75, f'{componente_label_2:.2f} Ω', fontsize=12, ha='center')
    plt.plot([1.4, 1.4], [1.2, 1.5], color='black', linewidth=3)  # Linha direita superior do resistor
    plt.plot([1.4, 1.4], [0, 0.4], color='black', linewidth=3)  # Linha direita inferior do resistor
    plt.plot([1.5, 1.5], [0.4, 1.2], color='black', linewidth=3)  # Parte direita do resistor
    plt.plot([1.3, 1.3], [0.4, 1.2], color='black', linewidth=3)  # Parte esquerda do resistor
    plt.plot([1.3, 1.5], [1.2, 1.2], color='black', linewidth=3)  # Parte superior do resistor
    plt.plot([1.3, 1.5], [0.4, 0.4], color='black', linewidth=3)  # Parte inferior do resistor

    plt.plot([0, 1.4], [0, 0], color='black', linewidth=3)  # Linha inferior

    # Adiciona a direção da corrente
    plt.arrow(0.35, 1.1, 0.6, 0, head_width=0.1, head_length=0.1, fc='black', ec='black')  # Seta da corrente
    plt.text(0.6, 0.8, current_label, fontsize=12, ha='center')
    
    # Adiciona a tensão no componente
    plt.text(0.6, 0.5, voltage_output_label, fontsize=12, ha='center')

    # Configurações de título e eixos
    plt.title(circuit_title)
    plt.axis('off')  # Desliga os eixos
    plt.xlim(-0.5, 2)
    plt.ylim(-0.5, 2.5)

    # Salva a figura
    plt.savefig('circuito_simples.png', format='png', bbox_inches='tight')
    plt.show()

angular_frequency = float(input("Frequência do circuito (em Hz): "))
angular_frequency = frequencia_angular(angular_frequency)

# Recebe os textos dos labels como input do usuário
voltage_label = float(input("Digite o valor da fonte de tensão do circuito (em Volts): "))

# Componente 1 (pode ser R, L ou C)
componente_label_1 = float(input("Digite o número:\n 1 - capacitor\n2 - indutor\n3 - resistor\nQual o primeiro componente?  "))
if componente_label_1 == 1:
    capacitance = float(input('Digite a capacitância (em Farads): '))
    componente_label_1 = 1 / (angular_frequency * capacitance)  # Xc = 1 / (ωC)
    circuit_title = "Circuito RC"  # Define o título para o circuito RC
elif componente_label_1 == 2:
    indutance = float(input('Digite a indutância (em Henries): '))
    componente_label_1 = angular_frequency * indutance  # Xl = ωL
    circuit_title = "Circuito RL"  # Define o título para o circuito RL
elif componente_label_1 == 3:
    componente_label_1 = float(input('Digite o valor da resistência (em Ohms): '))
    circuit_title = "Circuito RR"  # Define o título para o circuito RR

# Componente 2 (sempre resistência)
componente_label_2 = float(input("Digite o valor da resistência do segundo componente (em Ohms): "))

# Cálculo da tensão no resistor (V_o)
# Tensão sobre a resistência
voltage_output_magnitude = componente_label_2 * (voltage_label / (componente_label_1 + componente_label_2))  # Tensão no resistor usando a lei de Ohm
voltage_output_label = f'Vo(t) = {voltage_output_magnitude:.4f} * sin(ωt) V'

# Cálculo da corrente i(t)
current_magnitude = voltage_label / (componente_label_1 + componente_label_2)  # Lei de Ohm
current_label = f'i(t) = {current_magnitude:.4f} * sin(ωt) A'

# Chama a função para desenhar o circuito com os rótulos fornecidos e o título apropriado
draw_simple_circuit(voltage_label, componente_label_1, componente_label_2, voltage_output_label, current_label, circuit_title)
